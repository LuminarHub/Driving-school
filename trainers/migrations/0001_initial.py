# Generated by Django 5.2 on 2025-04-08 07:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(choices=[('CAR', 'Car'), ('SCOOTY', 'Scooty'), ('BOTH', 'Both Car and Scooty'), ('OTHER', 'Other')], default='BOTH', max_length=10)),
                ('experience', models.PositiveIntegerField(default=0, help_text='Years of experience as a driving trainer', validators=[django.core.validators.MinValueValidator(0)])),
                ('availability', models.CharField(choices=[('WEEKDAY', 'Weekdays Only'), ('WEEKEND', 'Weekends Only'), ('MORNING', 'Morning Shifts Only'), ('EVENING', 'Evening Shifts Only'), ('FLEXIBLE', 'Flexible Schedule'), ('CUSTOM', 'Custom Schedule')], default='FLEXIBLE', max_length=10)),
                ('is_remote', models.BooleanField(default=False, help_text='Whether this trainer provides remote training services')),
                ('service_area', models.CharField(blank=True, help_text='Geographic areas where remote training is available', max_length=255, null=True)),
                ('max_students', models.PositiveIntegerField(default=10, help_text='Maximum number of students this trainer can handle at once', validators=[django.core.validators.MinValueValidator(1)])),
                ('date_joined', models.DateField(default=django.utils.timezone.now, help_text='Date when the trainer joined the driving school')),
                ('license_number', models.CharField(blank=True, help_text="Trainer's driving license number", max_length=50, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the trainer', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this trainer is currently active')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driving_trainer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-experience', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='TrainerSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='trainers.trainer')),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TrainerVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='trainers.trainer')),
            ],
            options={
                'ordering': ['trainer', 'vehicle'],
            },
        ),
    ]
